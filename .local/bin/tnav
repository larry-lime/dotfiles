#!/bin/zsh

# alias cd="/usr/bin/cd"

export FZF_DEFAULT_OPTS="--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 --color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 --color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

CONFIG_FILE="$HOME/.local/bin/tnav_dirs.yaml"

DIRS=()
while IFS= read -r line; do
	DIRS+=("$HOME/$line")
done < <(yq e '.directories[]' $CONFIG_FILE)

# Get list of zoxide directories (using sesh list)
zoxide_dirs=$(sesh list)

# Use a named pipe for fd output
pipe=$(mktemp -u)
mkfifo "$pipe"

fzf_call() {
  echo -e "$zoxide_dirs\n $(fd . "$@" | awk -v home=$HOME '{gsub(home, "~"); print}')" |
    fzf-tmux -p 40%,50%\
    --reverse\
    --prompt '‚ö° '\
    --border-label ' tnav '\
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:execute(echo -n {} > /tmp/fzf_value; echo -n ‚ö°  )+reload(fzf_call "$@")' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'\
    --bind 'ctrl-n:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'\
    --expect "alt-enter,enter,ctrl-t,ctrl-o"| 
    xargs echo
}

# Check last argument value.
LAST_ARG="${@:$#}"
RUN_TMUX=false
if [[ $LAST_ARG = "--tmux" ]]; then
	RUN_TMUX=true
fi

if [[ -z $1 ]]; then
	OUTPUT=$(fzf_call "${DIRS[@]}" | sd '~' $HOME)
elif [[ $LAST_ARG =~ ^(--tmux)$ ]]; then
	OUTPUT=$(fzf_call "${DIRS[@]}" | sd '~' $HOME)
elif [[ $LAST_ARG =~ ^(--relative|-r)$ ]]; then
  cd "$(fd -t d | fzf-tmux -p 40%,50% --reverse --height=40% --layout=reverse)"
else
	echo "Invalid argument passed"
fi

read -r KEYPRESS BASE_PATH <<<"${OUTPUT}"

if [ -z $BASE_PATH ]; then
	return
fi

BASE_NAME=$(basename $BASE_PATH)
PARENT_PATH=$(dirname $BASE_PATH)
PARENT_NAME=$(basename $PARENT_PATH | tr -d '.')
PATH_IS_DIR=false
PATH_IS_FILE=false
PATH_IS_SESSION=false
SESSION_IS_RUNNING=false
START_TMUX=false


open_session() {
  if [[ "$KEYPRESS" = "enter" ]] || [[ "$KEYPRESS" = "alt-enter" ]]; then
    sesh connect $BASE_PATH
  else
    return
  fi
}


open_directory() {
	if [ "$KEYPRESS" = "enter" ]; then
		if [[ "$RUN_TMUX" = true ]]; then
      zoxide add $BASE_PATH
      sesh connect $BASE_PATH
      tmux send-keys -t $BASE_NAME.0 "$EDITOR" ENTER
		else
      zoxide add $BASE_PATH
			cd $BASE_PATH
			$EDITOR
		fi
	elif [[ "$KEYPRESS" = "alt-enter" ]]; then
      zoxide add $BASE_PATH
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect $BASE_PATH
		else
			cd $BASE_PATH
		fi
	else
		return
	fi
}

open_file() {
	if [ "$KEYPRESS" = "enter" ]; then
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect $PARENT_PATH
      tmux send-keys -t $PARENT_NAME.0 "$EDITOR $BASE_NAME" ENTER
		else
      cd $PARENT_PATH
      $EDITOR $BASE_NAME
		fi
	elif [[ "$KEYPRESS" = "alt-enter" ]]; then
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect $PARENT_PATH
		else
			cd $PARENT_PATH
		fi
	else
		return
	fi
}

sessions=$(sesh list --tmux)
if echo "$sessions" | rg -q "^$BASE_PATH$"; then
  PATH_IS_SESSION=true
  open_session
elif [ -d $BASE_PATH ]; then
  PATH_IS_DIR=true
  open_directory
else
  PATH_IS_FILE=true
  open_file
fi
