#!/bin/zsh

# NOTE: Something good would be for me to, once zoxide has my filepath dirs saved, add them to the list instead of manually passing the dirs

# export FZF_DEFAULT_OPTS="--color=bg+:#363a4f,bg:#24273a,spinner:#f4dbd6,hl:#ed8796 --color=fg:#cad3f5,header:#ed8796,info:#c6a0f6,pointer:#f4dbd6 --color=marker:#f4dbd6,fg+:#cad3f5,prompt:#c6a0f6,hl+:#ed8796"

CONFIG_FILE="$HOME/.local/bin/config_dirs.yaml"

DIRS=()
while IFS= read -r line; do
	DIRS+=("$HOME/$line")
done < <(yq e '.directories[]' $CONFIG_FILE)

nav_tmux() {
  local windows=$(tmux list-windows -a -F "#S:#W" | sed 's/^/[w] /')
  local zoxide_dirs=$(sesh list --zoxide | sed 's/^/[z] /')
  local sessions=$(sesh list --tmux --config |  sed 's/^/[s] /')

  {
    echo -e "$sessions\n$windows\n$zoxide_dirs"
    fd . "$@" | sed 's|^|[p] |; s|'"$HOME"'|~|'
  } | rg -v '^\[w\] $|^\[z\] $|^\[s\] $|^\[p\] $' |
    fzf-tmux -p 40%,50%\
      --reverse\
      --no-sort\
      --border-label ' Tnav '\
      --prompt 'ðŸ”Ž ' \
      --expect "alt-enter,enter" | 
    sed 's/.*] //' |
    xargs echo
}

nav_window() {
  local windows=$(tmux list-windows -a -F "#S:#W" | sed 's/^/[w] /')
  local zoxide_dirs=$(sesh list --zoxide | sed 's/^/[z] /')

  # NOTE: Removed searching through saved paths
  {
    echo -e "$windows\n$zoxide_dirs"
  } | rg -v '^\[w\] $|^\[z\] $|^\[s\] $|^\[p\] $' |
    fzf-tmux -p 40%,50%\
      --reverse\
      --no-sort\
      --border-label ' Tnav '\
      --prompt 'ðŸ”Ž ' \
      --expect "alt-enter,enter" | 
    sed 's/.*] //' |
    xargs echo
}

nav() {
  local zoxide_dirs=$(sesh list --zoxide | sed 's/^/[z] /')

  {
    echo -e "$zoxide_dirs"
    fd . "$@" | sed 's|^|[p] |; s|'"$HOME"'|~|'
  } | rg -v '^\[w\] $|^\[z\] $|^\[s\] $|^\[p\] $' |
    fzf-tmux -p 40%,50%\
      --reverse\
      --exact\
      --no-sort\
      --border-label ' Tnav '\
      --prompt 'ðŸ”Ž ' \
      --expect "alt-enter,enter" | 
    sed 's/.*] //' |
    xargs echo
}

# Check last argument value.
LAST_ARG="${@:$#}"

if [[ -z $1 ]]; then
  read -r KEYPRESS BASE_PATH <<<"$(nav "${DIRS[@]}" | sd '~' $HOME)"

elif [[ $LAST_ARG =~ ^(--window|w)$ ]]; then
	RUN_WINDOWS=true
  read -r KEYPRESS BASE_PATH <<<"$(nav_window "${DIRS[@]}" | sd '~' $HOME)"

elif [[ $LAST_ARG =~ ^(--tmux)$ ]]; then
	RUN_TMUX=true
  read -r KEYPRESS BASE_PATH <<<"$(nav_tmux "${DIRS[@]}" | sd '~' $HOME)"

elif [[ $LAST_ARG =~ ^(--relative|-r)$ ]]; then
  cd "$(fd -t d | fzf-tmux -p 40%,50% --reverse --height=40% --layout=reverse)"
else
	echo "Invalid argument passed"
fi

if [ -z $BASE_PATH ]; then
	return
fi

# TODO: Here, set my current session and window as the last session
read -r last_session last_window <<<"$(tmux display-message -p '#S:#W' | sd ':' ' ')"
tmux set-environment -g LAST_SESSION "$last_session"
tmux set-environment -g LAST_WINDOW "$last_window"

BASE_NAME=$(basename $BASE_PATH)
PARENT_PATH=$(dirname $BASE_PATH)
PARENT_NAME=$(basename $PARENT_PATH | tr -d '.')

open_directory() {
	if [ "$KEYPRESS" = "enter" ]; then
    zoxide add $BASE_PATH
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect -c $EDITOR $BASE_PATH
    elif [[ "$RUN_WINDOWS" = true ]]; then
      WINDOW_ID=$(tmux new-window -n "$BASE_NAME" -c "$BASE_PATH" -P -F "#{window_id}")
      tmux send-keys -t "$WINDOW_ID" 'nvim' C-m
      tmux select-window -t "$WINDOW_ID"
    else
			cd $BASE_PATH && $EDITOR
		fi
	elif [[ "$KEYPRESS" = "alt-enter" ]]; then
    zoxide add $BASE_PATH
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect $BASE_PATH
    elif [[ "$RUN_WINDOWS" = true ]]; then
      tmux new-window -n $BASE_NAME -c $BASE_PATH
		else
			cd $BASE_PATH
		fi
	else
		return
	fi
}

open_file() {
	if [ "$KEYPRESS" = "enter" ]; then
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect -c "$EDITOR $BASE_NAME" $PARENT_PATH
    elif [[ "$RUN_WINDOWS" = true ]]; then
      WINDOW_ID=$(tmux new-window -n "$BASE_NAME" -c "$PARENT_PATH" -P -F "#{window_id}")
      tmux send-keys -t "$WINDOW_ID" "nvim $BASE_NAME" C-m
      tmux select-window -t "$WINDOW_ID"
		else
      cd $PARENT_PATH && $EDITOR $BASE_NAME
		fi
	elif [[ "$KEYPRESS" = "alt-enter" ]]; then
		if [[ "$RUN_TMUX" = true ]]; then
      sesh connect $PARENT_PATH
    elif [[ "$RUN_WINDOWS" = true ]]; then
      tmux new-window -n $BASE_NAME -c $PARENT_PATH
		else
			cd $PARENT_PATH
		fi
	else
		return
	fi
}

if echo "$(sesh list --tmux --config)" | rg -q "^$BASE_PATH$"; then
  sesh connect $BASE_PATH
elif [[ "$BASE_PATH" == *":"* ]]; then
  IFS=':' read -r session window <<< "$BASE_PATH"
  sesh connect $session
  tmux select-window -t $window
  return
elif [ -d $BASE_PATH ]; then
  open_directory
else
  open_file
fi
